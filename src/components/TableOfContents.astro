---
// 简化的目录组件 - 使用 TOCHelper 工具类
---

<div
  class="toc-container bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow-sm p-6"
>
  <h3
    class="text-sm font-semibold text-gray-900 dark:text-gray-100 mb-3 flex items-center"
    id="toc-heading"
  >
    <svg
      class="w-4 h-4 mr-2"
      fill="none"
      stroke="currentColor"
      viewBox="0 0 24 24"
      aria-hidden="true"
    >
      <path
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="2"
        d="M4 6h16M4 10h16M4 14h16M4 18h16"></path>
    </svg>
    目录
  </h3>
  <nav
    id="toc-nav"
    aria-labelledby="toc-heading"
    role="navigation"
    aria-label="文章目录导航"
  >
  </nav>
</div>

<style is:global>
  @import "../styles/toc.css";
</style>

<script>
  import { TOCHelper, updateTOCActiveState } from '../utils/tocHelper';

  // 使用 TOCHelper 创建目录
  if (document.readyState === "loading") {
    document.addEventListener("DOMContentLoaded", initTOC);
  } else {
    initTOC();
  }

  function initTOC() {
    const nav = document.getElementById("toc-nav");
    const tocContainer = document.querySelector(".toc-container");
    
    if (!nav || !tocContainer) return;

    // 创建 TOC 助手实例，传入活动状态变化回调
    const tocHelper = new TOCHelper((activeId: string) => {
      updateTOCActiveState(tocContainer as HTMLElement, activeId);
    });

    // 初始化目录
    tocHelper.init();

    // 获取并设置目录HTML
    const tocHTML = tocHelper.getTOCHTML();
    if (tocHTML) {
      nav.innerHTML = tocHTML;

      // 设置点击处理
      tocHelper.setupClickHandler(nav);

      // 设置键盘导航
      tocHelper.setupKeyboardNavigation(nav);
    } else {
      // 如果没有标题，隐藏目录容器
      (tocContainer as HTMLElement).style.display = 'none';
    }

    // 页面卸载时清理资源
    window.addEventListener("beforeunload", () => {
      tocHelper.destroy();
    });

    // 将实例暴露到全局供移动端使用
    (window as any).tocHelperInstance = tocHelper;
  }
</script>
